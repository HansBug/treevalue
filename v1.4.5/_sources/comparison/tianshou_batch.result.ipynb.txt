{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9d39d946",
   "metadata": {},
   "source": [
    "# Comparison Between TreeValue and Tianshou Batch"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c6db2d4",
   "metadata": {},
   "source": [
    "In this section, we will take a look at the feature and performance of the [Tianshou Batch](https://github.com/thu-ml/tianshou) library, which is developed by Tsinghua Machine Learning Group."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "069361b0",
   "metadata": {},
   "source": [
    "Before starting the comparison, let us define some thing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "06fc8d26",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:17.568159Z",
     "iopub.status.busy": "2023-08-10T12:34:17.567148Z",
     "iopub.status.idle": "2023-08-10T12:34:19.599112Z",
     "shell.execute_reply": "2023-08-10T12:34:19.597904Z"
    }
   },
   "outputs": [],
   "source": [
    "import torch \n",
    "\n",
    "_TREE_DATA_1 = {'a': 1, 'b': 2, 'x': {'c': 3, 'd': 4}}\n",
    "_TREE_DATA_2 = {\n",
    "    'a': torch.randn(2, 3), \n",
    "    'x': {\n",
    "        'c': torch.randn(3, 4)\n",
    "    },\n",
    "}\n",
    "_TREE_DATA_3 = {\n",
    "    'obs': torch.randn(4, 84, 84),\n",
    "    'action': torch.randint(0, 6, size=(1,)),\n",
    "    'reward': torch.rand(1),\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83461b25",
   "metadata": {},
   "source": [
    "## Read and Write Operation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "067b3f73",
   "metadata": {},
   "source": [
    "Reading and writing are the two most common operations in the tree data structure based on the data model (TreeValue and Tianshou Batch both belong to this type), so this section will compare the reading and writing performance of these two libraries."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d09a5b7",
   "metadata": {},
   "source": [
    "### TreeValue's Get and Set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9519c4bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:19.607746Z",
     "iopub.status.busy": "2023-08-10T12:34:19.606419Z",
     "iopub.status.idle": "2023-08-10T12:34:19.649617Z",
     "shell.execute_reply": "2023-08-10T12:34:19.648495Z"
    }
   },
   "outputs": [],
   "source": [
    "from treevalue import FastTreeValue\n",
    "\n",
    "t = FastTreeValue(_TREE_DATA_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "11c37677",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:19.656696Z",
     "iopub.status.busy": "2023-08-10T12:34:19.654889Z",
     "iopub.status.idle": "2023-08-10T12:34:19.675074Z",
     "shell.execute_reply": "2023-08-10T12:34:19.673693Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<FastTreeValue 0x7f5db8242730>\n",
       "├── 'a' --> tensor([[0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133]])\n",
       "└── 'x' --> <FastTreeValue 0x7f5db82422e0>\n",
       "    └── 'c' --> tensor([[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fd70b0b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:19.680968Z",
     "iopub.status.busy": "2023-08-10T12:34:19.680588Z",
     "iopub.status.idle": "2023-08-10T12:34:19.689921Z",
     "shell.execute_reply": "2023-08-10T12:34:19.688847Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[0.6953, 1.0526, 0.2227],\n",
       "        [0.1908, 0.2277, 0.0133]])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t.a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c18197bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:19.695472Z",
     "iopub.status.busy": "2023-08-10T12:34:19.694822Z",
     "iopub.status.idle": "2023-08-10T12:34:26.073423Z",
     "shell.execute_reply": "2023-08-10T12:34:26.063432Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "77.5 ns ± 0.584 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit t.a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "bd52f867",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:26.079148Z",
     "iopub.status.busy": "2023-08-10T12:34:26.078725Z",
     "iopub.status.idle": "2023-08-10T12:34:26.091984Z",
     "shell.execute_reply": "2023-08-10T12:34:26.090897Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<FastTreeValue 0x7f5db8242730>\n",
       "├── 'a' --> tensor([[-1.0070,  0.7708,  1.2613],\n",
       "│                   [-0.0665,  0.6317, -0.8081]])\n",
       "└── 'x' --> <FastTreeValue 0x7f5db82422e0>\n",
       "    └── 'c' --> tensor([[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_value = torch.randn(2, 3)\n",
    "t.a = new_value\n",
    "\n",
    "t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bbe04d1c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:26.097539Z",
     "iopub.status.busy": "2023-08-10T12:34:26.096450Z",
     "iopub.status.idle": "2023-08-10T12:34:32.600609Z",
     "shell.execute_reply": "2023-08-10T12:34:32.593353Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "80.1 ns ± 1.6 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit t.a = new_value"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48c49731",
   "metadata": {},
   "source": [
    "### Tianshou Batch's Get and Set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f1bb14c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:32.608680Z",
     "iopub.status.busy": "2023-08-10T12:34:32.608064Z",
     "iopub.status.idle": "2023-08-10T12:34:33.190000Z",
     "shell.execute_reply": "2023-08-10T12:34:33.188843Z"
    }
   },
   "outputs": [],
   "source": [
    "from tianshou.data import Batch\n",
    "\n",
    "b = Batch(**_TREE_DATA_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "cb0777c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:33.195658Z",
     "iopub.status.busy": "2023-08-10T12:34:33.194484Z",
     "iopub.status.idle": "2023-08-10T12:34:33.204559Z",
     "shell.execute_reply": "2023-08-10T12:34:33.203587Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Batch(\n",
       "    a: tensor([[0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133]]),\n",
       "    x: Batch(\n",
       "           c: tensor([[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]]),\n",
       "       ),\n",
       ")"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "43ef8ea3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:33.209151Z",
     "iopub.status.busy": "2023-08-10T12:34:33.208618Z",
     "iopub.status.idle": "2023-08-10T12:34:33.216142Z",
     "shell.execute_reply": "2023-08-10T12:34:33.215080Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([[0.6953, 1.0526, 0.2227],\n",
       "        [0.1908, 0.2277, 0.0133]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b.a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b785ab72",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:33.221274Z",
     "iopub.status.busy": "2023-08-10T12:34:33.220583Z",
     "iopub.status.idle": "2023-08-10T12:34:39.326987Z",
     "shell.execute_reply": "2023-08-10T12:34:39.325919Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "75.4 ns ± 0.702 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit b.a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ad54dc69",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:39.331574Z",
     "iopub.status.busy": "2023-08-10T12:34:39.330889Z",
     "iopub.status.idle": "2023-08-10T12:34:39.340287Z",
     "shell.execute_reply": "2023-08-10T12:34:39.339034Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Batch(\n",
       "    a: tensor([[ 0.4856, -0.1999, -0.7615],\n",
       "               [ 0.0727, -0.2552, -1.6941]]),\n",
       "    x: Batch(\n",
       "           c: tensor([[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]]),\n",
       "       ),\n",
       ")"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_value = torch.randn(2, 3)\n",
    "b.a = new_value\n",
    "\n",
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "29b1d0bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:39.345113Z",
     "iopub.status.busy": "2023-08-10T12:34:39.344170Z",
     "iopub.status.idle": "2023-08-10T12:34:44.712833Z",
     "shell.execute_reply": "2023-08-10T12:34:44.711806Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "661 ns ± 6.8 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit b.a = new_value"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b61ad1d0",
   "metadata": {},
   "source": [
    "## Initialization"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d70f0d54",
   "metadata": {},
   "source": [
    "### TreeValue's Initialization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d32a679b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:44.718116Z",
     "iopub.status.busy": "2023-08-10T12:34:44.717358Z",
     "iopub.status.idle": "2023-08-10T12:34:53.639981Z",
     "shell.execute_reply": "2023-08-10T12:34:53.639067Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.1 µs ± 9.18 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit FastTreeValue(_TREE_DATA_1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24f3707b",
   "metadata": {},
   "source": [
    "### Tianshou Batch's Initialization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ac3958df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:34:53.645236Z",
     "iopub.status.busy": "2023-08-10T12:34:53.644552Z",
     "iopub.status.idle": "2023-08-10T12:35:04.858388Z",
     "shell.execute_reply": "2023-08-10T12:35:04.857461Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13.8 µs ± 143 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit Batch(**_TREE_DATA_1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ab82e2d",
   "metadata": {},
   "source": [
    "## Deep Copy Operation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "210a9442",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:04.868205Z",
     "iopub.status.busy": "2023-08-10T12:35:04.867788Z",
     "iopub.status.idle": "2023-08-10T12:35:04.875532Z",
     "shell.execute_reply": "2023-08-10T12:35:04.874138Z"
    }
   },
   "outputs": [],
   "source": [
    "import copy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a736274",
   "metadata": {},
   "source": [
    "### Deep Copy of TreeValue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f9bcadd6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:04.885238Z",
     "iopub.status.busy": "2023-08-10T12:35:04.884818Z",
     "iopub.status.idle": "2023-08-10T12:35:07.329038Z",
     "shell.execute_reply": "2023-08-10T12:35:07.328085Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "297 µs ± 14.5 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "t3 = FastTreeValue(_TREE_DATA_3)\n",
    "%timeit copy.deepcopy(t3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf8be7ea",
   "metadata": {},
   "source": [
    "### Deep Copy of Tianshou Batch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "91998e6f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:07.333443Z",
     "iopub.status.busy": "2023-08-10T12:35:07.332891Z",
     "iopub.status.idle": "2023-08-10T12:35:09.629974Z",
     "shell.execute_reply": "2023-08-10T12:35:09.628764Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "282 µs ± 14.5 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "b3 = Batch(**_TREE_DATA_3)\n",
    "%timeit copy.deepcopy(b3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "223162fb",
   "metadata": {},
   "source": [
    "## Stack, Concat and Split Operation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85fa4a73",
   "metadata": {},
   "source": [
    "### Performance of TreeValue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a0c2b697",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:09.635991Z",
     "iopub.status.busy": "2023-08-10T12:35:09.635348Z",
     "iopub.status.idle": "2023-08-10T12:35:09.645096Z",
     "shell.execute_reply": "2023-08-10T12:35:09.643352Z"
    }
   },
   "outputs": [],
   "source": [
    "trees = [FastTreeValue(_TREE_DATA_2) for _ in range(8)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "017ea5a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:09.650286Z",
     "iopub.status.busy": "2023-08-10T12:35:09.649786Z",
     "iopub.status.idle": "2023-08-10T12:35:09.663378Z",
     "shell.execute_reply": "2023-08-10T12:35:09.662393Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<FastTreeValue 0x7f5cf4689dc0>\n",
       "├── 'a' --> tensor([[[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]],\n",
       "│           \n",
       "│                   [[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]],\n",
       "│           \n",
       "│                   [[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]],\n",
       "│           \n",
       "│                   [[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]],\n",
       "│           \n",
       "│                   [[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]],\n",
       "│           \n",
       "│                   [[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]],\n",
       "│           \n",
       "│                   [[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]],\n",
       "│           \n",
       "│                   [[0.6953, 1.0526, 0.2227],\n",
       "│                    [0.1908, 0.2277, 0.0133]]])\n",
       "└── 'x' --> <FastTreeValue 0x7f5cf4689e80>\n",
       "    └── 'c' --> tensor([[[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "                \n",
       "                        [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "                \n",
       "                        [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "                \n",
       "                        [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "                \n",
       "                        [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "                \n",
       "                        [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "                \n",
       "                        [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "                \n",
       "                        [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                         [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                         [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_stack = FastTreeValue.func(subside=True)(torch.stack)\n",
    "\n",
    "t_stack(trees)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f8b3f415",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:09.668337Z",
     "iopub.status.busy": "2023-08-10T12:35:09.667131Z",
     "iopub.status.idle": "2023-08-10T12:35:13.909025Z",
     "shell.execute_reply": "2023-08-10T12:35:13.907184Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "52.1 µs ± 548 ns per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit t_stack(trees)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "94b56771",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:13.918796Z",
     "iopub.status.busy": "2023-08-10T12:35:13.917091Z",
     "iopub.status.idle": "2023-08-10T12:35:13.932528Z",
     "shell.execute_reply": "2023-08-10T12:35:13.931389Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<FastTreeValue 0x7f5ceca547c0>\n",
       "├── 'a' --> tensor([[0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133],\n",
       "│                   [0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133],\n",
       "│                   [0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133],\n",
       "│                   [0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133],\n",
       "│                   [0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133],\n",
       "│                   [0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133],\n",
       "│                   [0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133],\n",
       "│                   [0.6953, 1.0526, 0.2227],\n",
       "│                   [0.1908, 0.2277, 0.0133]])\n",
       "└── 'x' --> <FastTreeValue 0x7f5dbc257160>\n",
       "    └── 'c' --> tensor([[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                        [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                        [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                        [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                        [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                        [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                        [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                        [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                        [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                        [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]])"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_cat = FastTreeValue.func(subside=True)(torch.cat)\n",
    "\n",
    "t_cat(trees)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5e9c06a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:13.939563Z",
     "iopub.status.busy": "2023-08-10T12:35:13.938586Z",
     "iopub.status.idle": "2023-08-10T12:35:17.864644Z",
     "shell.execute_reply": "2023-08-10T12:35:17.862796Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "48.4 µs ± 1.51 µs per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit t_cat(trees)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a3ab5c8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:17.873249Z",
     "iopub.status.busy": "2023-08-10T12:35:17.872254Z",
     "iopub.status.idle": "2023-08-10T12:35:26.861890Z",
     "shell.execute_reply": "2023-08-10T12:35:26.860977Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "111 µs ± 4.53 µs per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "t_split = FastTreeValue.func(rise=True)(torch.split)\n",
    "tree = FastTreeValue({\n",
    "    'obs': torch.randn(8, 4, 84, 84),\n",
    "    'action': torch.randint(0, 6, size=(8, 1,)),\n",
    "    'reward': torch.rand(8, 1),\n",
    "})\n",
    "\n",
    "%timeit t_split(tree, 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31c3ec0b",
   "metadata": {},
   "source": [
    "### Performance of Tianshou Batch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9ead828a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:26.866485Z",
     "iopub.status.busy": "2023-08-10T12:35:26.865888Z",
     "iopub.status.idle": "2023-08-10T12:35:26.877284Z",
     "shell.execute_reply": "2023-08-10T12:35:26.876210Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Batch(\n",
       "    a: tensor([[[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]],\n",
       "       \n",
       "               [[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]],\n",
       "       \n",
       "               [[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]],\n",
       "       \n",
       "               [[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]],\n",
       "       \n",
       "               [[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]],\n",
       "       \n",
       "               [[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]],\n",
       "       \n",
       "               [[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]],\n",
       "       \n",
       "               [[0.6953, 1.0526, 0.2227],\n",
       "                [0.1908, 0.2277, 0.0133]]]),\n",
       "    x: Batch(\n",
       "           c: tensor([[[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "              \n",
       "                      [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "              \n",
       "                      [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "              \n",
       "                      [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "              \n",
       "                      [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "              \n",
       "                      [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "              \n",
       "                      [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]],\n",
       "              \n",
       "                      [[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                       [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                       [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]]]),\n",
       "       ),\n",
       ")"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "batches = [Batch(**_TREE_DATA_2) for _ in range(8)]\n",
    "\n",
    "Batch.stack(batches)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ec9037a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:26.882720Z",
     "iopub.status.busy": "2023-08-10T12:35:26.882010Z",
     "iopub.status.idle": "2023-08-10T12:35:36.520455Z",
     "shell.execute_reply": "2023-08-10T12:35:36.519577Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "118 µs ± 1.58 µs per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit Batch.stack(batches)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "cb8ab77e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:36.525350Z",
     "iopub.status.busy": "2023-08-10T12:35:36.524302Z",
     "iopub.status.idle": "2023-08-10T12:35:36.534628Z",
     "shell.execute_reply": "2023-08-10T12:35:36.533677Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Batch(\n",
       "    a: tensor([[0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133],\n",
       "               [0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133],\n",
       "               [0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133],\n",
       "               [0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133],\n",
       "               [0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133],\n",
       "               [0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133],\n",
       "               [0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133],\n",
       "               [0.6953, 1.0526, 0.2227],\n",
       "               [0.1908, 0.2277, 0.0133]]),\n",
       "    x: Batch(\n",
       "           c: tensor([[ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                      [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                      [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                      [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                      [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                      [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                      [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00],\n",
       "                      [ 1.0578e+00,  3.0921e-01, -2.1333e+00, -8.6080e-02],\n",
       "                      [ 3.2517e-01, -2.5166e-04,  2.5517e-01,  1.5165e+00],\n",
       "                      [ 9.0354e-01, -1.2548e-01,  5.7880e-01, -1.1625e+00]]),\n",
       "       ),\n",
       ")"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Batch.cat(batches)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "18dfb045",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:36.539572Z",
     "iopub.status.busy": "2023-08-10T12:35:36.538514Z",
     "iopub.status.idle": "2023-08-10T12:35:38.264382Z",
     "shell.execute_reply": "2023-08-10T12:35:38.262366Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "211 µs ± 6.07 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "%timeit Batch.cat(batches)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c6688e51",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-10T12:35:38.269113Z",
     "iopub.status.busy": "2023-08-10T12:35:38.268728Z",
     "iopub.status.idle": "2023-08-10T12:35:43.900062Z",
     "shell.execute_reply": "2023-08-10T12:35:43.899116Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "703 µs ± 60.9 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\n"
     ]
    }
   ],
   "source": [
    "batch = Batch({\n",
    "    'obs': torch.randn(8, 4, 84, 84),\n",
    "    'action': torch.randint(0, 6, size=(8, 1,)),\n",
    "    'reward': torch.rand(8, 1)}\n",
    ")\n",
    "\n",
    "%timeit list(Batch.split(batch, 1, shuffle=False, merge_last=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2539fbd9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.17"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
